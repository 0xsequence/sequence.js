import { getVersion as n } from "./internal/errors.js";
class c extends Error {
  constructor(t, e = {}) {
    const a = (() => {
      var s;
      if (e.cause instanceof c) {
        if (e.cause.details)
          return e.cause.details;
        if (e.cause.shortMessage)
          return e.cause.shortMessage;
      }
      return e.cause && "details" in e.cause && typeof e.cause.details == "string" ? e.cause.details : (s = e.cause) != null && s.message ? e.cause.message : e.details;
    })(), u = e.cause instanceof c && e.cause.docsPath || e.docsPath, i = `https://oxlib.sh${u ?? ""}`, d = [
      t || "An error occurred.",
      ...e.metaMessages ? ["", ...e.metaMessages] : [],
      ...a || u ? [
        "",
        a ? `Details: ${a}` : void 0,
        u ? `See: ${i}` : void 0
      ] : []
    ].filter((s) => typeof s == "string").join(`
`);
    super(d, e.cause ? { cause: e.cause } : void 0), Object.defineProperty(this, "details", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "docs", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "docsPath", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "shortMessage", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "cause", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "BaseError"
    }), Object.defineProperty(this, "version", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: `ox@${n()}`
    }), this.cause = e.cause, this.details = a, this.docs = i, this.docsPath = u, this.shortMessage = t;
  }
  walk(t) {
    return l(this, t);
  }
}
function l(r, t) {
  return t != null && t(r) ? r : r && typeof r == "object" && "cause" in r && r.cause ? l(r.cause, t) : t ? null : r;
}
export {
  c as BaseError
};
