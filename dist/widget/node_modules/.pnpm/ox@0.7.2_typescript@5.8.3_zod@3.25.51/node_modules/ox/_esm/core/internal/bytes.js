import { SizeExceedsPaddingSizeError as u, size as d, SizeOverflowError as a } from "../Bytes.js";
function p(e, t) {
  if (d(e) > t)
    throw new a({
      givenSize: d(e),
      maxSize: t
    });
}
const n = {
  zero: 48,
  nine: 57,
  A: 65,
  F: 70,
  a: 97,
  f: 102
};
function s(e) {
  if (e >= n.zero && e <= n.nine)
    return e - n.zero;
  if (e >= n.A && e <= n.F)
    return e - (n.A - 10);
  if (e >= n.a && e <= n.f)
    return e - (n.a - 10);
}
function S(e, t = {}) {
  const { dir: z, size: i = 32 } = t;
  if (i === 0)
    return e;
  if (e.length > i)
    throw new u({
      size: e.length,
      targetSize: i,
      type: "Bytes"
    });
  const o = new Uint8Array(i);
  for (let r = 0; r < i; r++) {
    const f = z === "right";
    o[f ? r : i - r - 1] = e[f ? r : e.length - r - 1];
  }
  return o;
}
export {
  p as assertSize,
  n as charCodeMap,
  s as charCodeToBase16,
  S as pad
};
