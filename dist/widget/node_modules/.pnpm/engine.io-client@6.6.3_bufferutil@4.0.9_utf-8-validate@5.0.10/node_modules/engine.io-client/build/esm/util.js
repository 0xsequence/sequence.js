import { globalThisShim as r } from "./globals.js";
function f(t, ...e) {
  return e.reduce((n, i) => (t.hasOwnProperty(i) && (n[i] = t[i]), n), {});
}
const o = r.setTimeout, s = r.clearTimeout;
function m(t, e) {
  e.useNativeTimers ? (t.setTimeoutFn = o.bind(r), t.clearTimeoutFn = s.bind(r)) : (t.setTimeoutFn = r.setTimeout.bind(r), t.clearTimeoutFn = r.clearTimeout.bind(r));
}
const l = 1.33;
function a(t) {
  return typeof t == "string" ? T(t) : Math.ceil((t.byteLength || t.size) * l);
}
function T(t) {
  let e = 0, n = 0;
  for (let i = 0, u = t.length; i < u; i++)
    e = t.charCodeAt(i), e < 128 ? n += 1 : e < 2048 ? n += 2 : e < 55296 || e >= 57344 ? n += 3 : (i++, n += 4);
  return n;
}
function g() {
  return Date.now().toString(36).substring(3) + Math.random().toString(36).substring(2, 5);
}
export {
  a as byteLength,
  m as installTimerFunctions,
  f as pick,
  g as randomString
};
