function i(t) {
  t = t || {}, this.ms = t.min || 100, this.max = t.max || 1e4, this.factor = t.factor || 2, this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0, this.attempts = 0;
}
i.prototype.duration = function() {
  var t = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var r = Math.random(), e = Math.floor(r * this.jitter * t);
    t = Math.floor(r * 10) & 1 ? t + e : t - e;
  }
  return Math.min(t, this.max) | 0;
};
i.prototype.reset = function() {
  this.attempts = 0;
};
i.prototype.setMin = function(t) {
  this.ms = t;
};
i.prototype.setMax = function(t) {
  this.max = t;
};
i.prototype.setJitter = function(t) {
  this.jitter = t;
};
export {
  i as Backoff
};
