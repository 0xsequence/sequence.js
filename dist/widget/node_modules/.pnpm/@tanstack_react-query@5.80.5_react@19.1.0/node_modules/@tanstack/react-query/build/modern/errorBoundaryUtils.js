import * as s from "react";
import { shouldThrowError as n } from "../../../../../../@tanstack_query-core@5.80.5/node_modules/@tanstack/query-core/build/modern/utils.js";
var i = (r, e) => {
  (r.suspense || r.throwOnError || r.experimental_prefetchInRender) && (e.isReset() || (r.retryOnMount = !1));
}, E = (r) => {
  s.useEffect(() => {
    r.clearReset();
  }, [r]);
}, R = ({
  result: r,
  errorResetBoundary: e,
  throwOnError: t,
  query: a,
  suspense: o
}) => r.isError && !e.isReset() && !r.isFetching && a && (o && r.data === void 0 || n(t, [r.error, a]));
export {
  i as ensurePreventErrorBoundaryRetry,
  R as getHasError,
  E as useClearResetErrorBoundary
};
