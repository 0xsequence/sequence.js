import { parseAccount as a } from "../../accounts/utils/parseAccount.js";
import { maxUint256 as m } from "../../constants/number.js";
import { InvalidAddressError as n } from "../../errors/address.js";
import { FeeCapTooHighError as p, TipAboveFeeCapError as c } from "../../errors/node.js";
import { FeeConflictError as u } from "../../errors/transaction.js";
import { isAddress as s } from "../address/isAddress.js";
function E(d) {
  const { account: i, gasPrice: f, maxFeePerGas: r, maxPriorityFeePerGas: e, to: o } = d, t = i ? a(i) : void 0;
  if (t && !s(t.address))
    throw new n({ address: t.address });
  if (o && !s(o))
    throw new n({ address: o });
  if (typeof f < "u" && (typeof r < "u" || typeof e < "u"))
    throw new u();
  if (r && r > m)
    throw new p({ maxFeePerGas: r });
  if (e && r && e > r)
    throw new c({ maxFeePerGas: r, maxPriorityFeePerGas: e });
}
export {
  E as assertRequest
};
