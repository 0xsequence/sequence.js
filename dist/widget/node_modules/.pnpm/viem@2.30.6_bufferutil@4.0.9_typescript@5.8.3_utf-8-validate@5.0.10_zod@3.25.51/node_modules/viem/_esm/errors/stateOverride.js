function f(r) {
  return r.reduce((c, { slot: i, value: e }) => `${c}        ${i}: ${e}
`, "");
}
function t(r) {
  return r.reduce((c, { address: i, ...e }) => {
    let n = `${c}    ${i}:
`;
    return e.nonce && (n += `      nonce: ${e.nonce}
`), e.balance && (n += `      balance: ${e.balance}
`), e.code && (n += `      code: ${e.code}
`), e.state && (n += `      state:
`, n += f(e.state)), e.stateDiff && (n += `      stateDiff:
`, n += f(e.stateDiff)), n;
  }, `  State Override:
`).slice(0, -1);
}
export {
  f as prettyStateMapping,
  t as prettyStateOverride
};
