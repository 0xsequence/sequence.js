import { BaseError as t } from "../../errors/base.js";
class o extends t {
  constructor({ givenLength: e, maxBytecodeSize: s }) {
    super(`Bytecode cannot be longer than ${s} bytes. Given length: ${e}`, { name: "BytecodeLengthExceedsMaxSizeError" });
  }
}
class d extends t {
  constructor({ givenLengthInWords: e }) {
    super(`Bytecode length in 32-byte words must be odd. Given length in words: ${e}`, { name: "BytecodeLengthInWordsMustBeOddError" });
  }
}
class c extends t {
  constructor({ givenLength: e }) {
    super(`The bytecode length in bytes must be divisible by 32. Given length: ${e}`, { name: "BytecodeLengthMustBeDivisibleBy32Error" });
  }
}
export {
  o as BytecodeLengthExceedsMaxSizeError,
  d as BytecodeLengthInWordsMustBeOddError,
  c as BytecodeLengthMustBeDivisibleBy32Error
};
