import { InvalidAddressError as t } from "../../errors/address.js";
import { BaseError as d } from "../../errors/base.js";
import { InvalidChainIdError as m } from "../../errors/chain.js";
import { isAddress as s } from "../../utils/address/isAddress.js";
import { InvalidEip712TransactionError as p } from "../errors/transaction.js";
import { isEIP712Transaction as f } from "./isEip712Transaction.js";
function c(a) {
  const { chainId: o, to: e, from: i, paymaster: r, paymasterInput: n } = a;
  if (!f(a))
    throw new p();
  if (!o || o <= 0)
    throw new m({ chainId: o });
  if (e && !s(e))
    throw new t({ address: e });
  if (i && !s(i))
    throw new t({ address: i });
  if (r && !s(r))
    throw new t({ address: r });
  if (r && !n)
    throw new d("`paymasterInput` must be provided when `paymaster` is defined");
  if (!r && n)
    throw new d("`paymaster` must be provided when `paymasterInput` is defined");
}
export {
  c as assertEip712Transaction
};
