import { InvalidAddressError as s } from "../../errors/address.js";
import { InvalidStorageKeySizeError as l } from "../../errors/transaction.js";
import { isAddress as f } from "../address/isAddress.js";
function a(r) {
  if (!r || r.length === 0)
    return [];
  const n = [];
  for (let o = 0; o < r.length; o++) {
    const { address: i, storageKeys: e } = r[o];
    for (let t = 0; t < e.length; t++)
      if (e[t].length - 2 !== 64)
        throw new l({ storageKey: e[t] });
    if (!f(i, { strict: !1 }))
      throw new s({ address: i });
    n.push([i, e]);
  }
  return n;
}
export {
  a as serializeAccessList
};
