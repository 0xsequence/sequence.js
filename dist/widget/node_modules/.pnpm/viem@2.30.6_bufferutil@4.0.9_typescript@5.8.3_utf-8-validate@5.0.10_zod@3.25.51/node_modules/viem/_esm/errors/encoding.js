import { BaseError as t } from "./base.js";
class $ extends t {
  constructor({ max: e, min: r, signed: s, size: n, value: a }) {
    super(`Number "${a}" is not in safe ${n ? `${n * 8}-bit ${s ? "signed" : "unsigned"} ` : ""}integer range ${e ? `(${r} to ${e})` : `(above ${r})`}`, { name: "IntegerOutOfRangeError" });
  }
}
class c extends t {
  constructor({ givenSize: e, maxSize: r }) {
    super(`Size cannot exceed ${r} bytes. Given size: ${e} bytes.`, { name: "SizeOverflowError" });
  }
}
export {
  $ as IntegerOutOfRangeError,
  c as SizeOverflowError
};
