import { hexToBigInt as n } from "../utils/encoding/fromHex.js";
import { defineBlock as s } from "../utils/formatters/block.js";
import { defineTransaction as m, formatTransaction as l } from "../utils/formatters/transaction.js";
import { defineTransactionReceipt as c } from "../utils/formatters/transactionReceipt.js";
const d = {
  block: /* @__PURE__ */ s({
    format(e) {
      var r;
      return {
        transactions: (r = e.transactions) == null ? void 0 : r.map((t) => {
          if (typeof t == "string")
            return t;
          const i = l(t);
          return i.typeHex === "0x7e" && (i.isSystemTx = t.isSystemTx, i.mint = t.mint ? n(t.mint) : void 0, i.sourceHash = t.sourceHash, i.type = "deposit"), i;
        }),
        stateRoot: e.stateRoot
      };
    }
  }),
  transaction: /* @__PURE__ */ m({
    format(e) {
      const o = {};
      return e.type === "0x7e" && (o.isSystemTx = e.isSystemTx, o.mint = e.mint ? n(e.mint) : void 0, o.sourceHash = e.sourceHash, o.type = "deposit"), o;
    }
  }),
  transactionReceipt: /* @__PURE__ */ c({
    format(e) {
      return {
        l1GasPrice: e.l1GasPrice ? n(e.l1GasPrice) : null,
        l1GasUsed: e.l1GasUsed ? n(e.l1GasUsed) : null,
        l1Fee: e.l1Fee ? n(e.l1Fee) : null,
        l1FeeScalar: e.l1FeeScalar ? Number(e.l1FeeScalar) : null
      };
    }
  })
};
export {
  d as formatters
};
