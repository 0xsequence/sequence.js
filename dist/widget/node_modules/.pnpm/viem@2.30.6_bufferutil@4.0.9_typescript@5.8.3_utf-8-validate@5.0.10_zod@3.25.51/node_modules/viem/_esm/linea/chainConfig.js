import { estimateGas as o } from "./actions/estimateGas.js";
const G = {
  fees: {
    estimateFeesPerGas: c,
    async maxPriorityFeePerGas({ block: t, client: i, request: e }) {
      const a = await c({
        block: t,
        client: i,
        multiply: (r) => r,
        request: e,
        type: "eip1559"
      });
      return a != null && a.maxPriorityFeePerGas ? a.maxPriorityFeePerGas : null;
    }
  }
};
async function c({ client: t, multiply: i, request: e, type: a }) {
  try {
    const r = await o(t, {
      ...e,
      account: e == null ? void 0 : e.account
    }), { priorityFeePerGas: n } = r, s = i(BigInt(r.baseFeePerGas)) + n;
    return a === "legacy" ? { gasPrice: s } : {
      maxFeePerGas: s,
      maxPriorityFeePerGas: n
    };
  } catch {
    return null;
  }
}
export {
  G as chainConfig
};
