import { SizeExceedsPaddingSizeError as d } from "../../errors/data.js";
function f(n, { dir: r, size: t = 32 } = {}) {
  return typeof n == "string" ? p(n, { dir: r, size: t }) : i(n, { dir: r, size: t });
}
function p(n, { dir: r, size: t = 32 } = {}) {
  if (t === null)
    return n;
  const e = n.replace("0x", "");
  if (e.length > t * 2)
    throw new d({
      size: Math.ceil(e.length / 2),
      targetSize: t,
      type: "hex"
    });
  return `0x${e[r === "right" ? "padEnd" : "padStart"](t * 2, "0")}`;
}
function i(n, { dir: r, size: t = 32 } = {}) {
  if (t === null)
    return n;
  if (n.length > t)
    throw new d({
      size: n.length,
      targetSize: t,
      type: "bytes"
    });
  const e = new Uint8Array(t);
  for (let a = 0; a < t; a++) {
    const o = r === "right";
    e[o ? a : t - a - 1] = n[o ? a : n.length - a - 1];
  }
  return e;
}
export {
  f as pad,
  i as padBytes,
  p as padHex
};
