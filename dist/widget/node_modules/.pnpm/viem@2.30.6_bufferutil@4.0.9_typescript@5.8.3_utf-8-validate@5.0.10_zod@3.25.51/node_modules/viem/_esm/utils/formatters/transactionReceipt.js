import { hexToNumber as d } from "../encoding/fromHex.js";
import { defineFormatter as b } from "./formatter.js";
import { formatLog as m } from "./log.js";
import { transactionType as o } from "./transaction.js";
const f = {
  "0x0": "reverted",
  "0x1": "success"
};
function r(l) {
  const s = {
    ...l,
    blockNumber: l.blockNumber ? BigInt(l.blockNumber) : null,
    contractAddress: l.contractAddress ? l.contractAddress : null,
    cumulativeGasUsed: l.cumulativeGasUsed ? BigInt(l.cumulativeGasUsed) : null,
    effectiveGasPrice: l.effectiveGasPrice ? BigInt(l.effectiveGasPrice) : null,
    gasUsed: l.gasUsed ? BigInt(l.gasUsed) : null,
    logs: l.logs ? l.logs.map((u) => m(u)) : null,
    to: l.to ? l.to : null,
    transactionIndex: l.transactionIndex ? d(l.transactionIndex) : null,
    status: l.status ? f[l.status] : null,
    type: l.type ? o[l.type] || l.type : null
  };
  return l.blobGasPrice && (s.blobGasPrice = BigInt(l.blobGasPrice)), l.blobGasUsed && (s.blobGasUsed = BigInt(l.blobGasUsed)), s;
}
const U = /* @__PURE__ */ b("transactionReceipt", r);
export {
  U as defineTransactionReceipt,
  r as formatTransactionReceipt,
  f as receiptStatuses
};
