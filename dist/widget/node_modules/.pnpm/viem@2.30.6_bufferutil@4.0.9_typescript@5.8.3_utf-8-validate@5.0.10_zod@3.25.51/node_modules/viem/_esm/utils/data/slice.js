import { SliceOffsetOutOfBoundsError as n } from "../../errors/data.js";
import { isHex as c } from "./isHex.js";
import { size as s } from "./size.js";
function O(e, f, i, { strict: o } = {}) {
  return c(e, { strict: !1 }) ? l(e, f, i, {
    strict: o
  }) : u(e, f, i, {
    strict: o
  });
}
function t(e, f, i) {
  if (s(e) !== i - f)
    throw new n({
      offset: i,
      position: "end",
      size: s(e)
    });
}
function u(e, f, i, { strict: o } = {}) {
  const r = e.slice(f, i);
  return o && t(r, f, i), r;
}
function l(e, f, i, { strict: o } = {}) {
  const r = `0x${e.replace("0x", "").slice(f * 2, i * 2)}`;
  return o && t(r, f, i), r;
}
export {
  O as slice,
  u as sliceBytes,
  l as sliceHex
};
