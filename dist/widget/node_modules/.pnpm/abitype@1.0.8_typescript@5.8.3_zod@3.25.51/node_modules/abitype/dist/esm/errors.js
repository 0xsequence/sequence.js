import { version as o } from "./version.js";
class a extends Error {
  constructor(i, e = {}) {
    var r;
    const t = e.cause instanceof a ? e.cause.details : (r = e.cause) != null && r.message ? e.cause.message : e.details, s = e.cause instanceof a && e.cause.docsPath || e.docsPath, u = [
      i || "An error occurred.",
      "",
      ...e.metaMessages ? [...e.metaMessages, ""] : [],
      ...s ? [`Docs: https://abitype.dev${s}`] : [],
      ...t ? [`Details: ${t}`] : [],
      `Version: abitype@${o}`
    ].join(`
`);
    super(u), Object.defineProperty(this, "details", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "docsPath", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "metaMessages", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "shortMessage", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "AbiTypeError"
    }), e.cause && (this.cause = e.cause), this.details = t, this.docsPath = s, this.metaMessages = e.metaMessages, this.shortMessage = i;
  }
}
export {
  a as BaseError
};
