import { BaseError as e } from "../../errors.js";
class u extends e {
  constructor({ signature: r, type: t }) {
    super(`Invalid ${t} signature.`, {
      details: r
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "InvalidSignatureError"
    });
  }
}
class i extends e {
  constructor({ signature: r }) {
    super("Unknown signature.", {
      details: r
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "UnknownSignatureError"
    });
  }
}
export {
  u as InvalidSignatureError,
  i as UnknownSignatureError
};
