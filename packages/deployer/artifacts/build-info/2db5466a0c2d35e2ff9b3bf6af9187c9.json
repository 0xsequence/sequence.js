{
  "id": "2db5466a0c2d35e2ff9b3bf6af9187c9",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/NanoUniversalDeployer.sol": {
        "content": "pragma solidity ^0.7.6;\n\ncontract NanoUniversalDeployer {\n    event Deploy(address _addr) anonymous;\n\n    fallback() external payable {\n        address addr;\n        bytes memory code = msg.data;\n        assembly { addr := create2(callvalue(), add(code, 32), mload(code), 0) }\n        emit Deploy(addr);\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100000,
        "details": {
          "yul": true
        }
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/NanoUniversalDeployer.sol": {
        "NanoUniversalDeployer": {
          "abi": [
            {
              "anonymous": true,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "Deploy",
              "type": "event"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b5060a580601d6000396000f3fe60a06020601f3690810182900490910282016040526080818152600092839283918190838280828437600092018290525084519495509392505060208401905034f56040805173ffffffffffffffffffffffffffffffffffffffff83168152905191935081900360200190a0505000fea26469706673582212207457f4b6f392e3ba295b33e363360d55f06ead85ec96165a406e7b0231ab668464736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA5 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0xA0 PUSH1 0x20 PUSH1 0x1F CALLDATASIZE SWAP1 DUP2 ADD DUP3 SWAP1 DIV SWAP1 SWAP2 MUL DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP2 DUP2 SWAP1 DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP DUP5 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP PUSH1 0x20 DUP5 ADD SWAP1 POP CALLVALUE CREATE2 PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 POP DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG0 POP POP STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x57F4B6F392E3BA295B33E363360D55F06EAD85EC96 AND GAS BLOCKHASH PUSH15 0x7B0231AB668464736F6C6343000706 STOP CALLER ",
              "sourceMap": "25:286:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60a06020601f3690810182900490910282016040526080818152600092839283918190838280828437600092018290525084519495509392505060208401905034f56040805173ffffffffffffffffffffffffffffffffffffffff83168152905191935081900360200190a0505000fea26469706673582212207457f4b6f392e3ba295b33e363360d55f06ead85ec96165a406e7b0231ab668464736f6c63430007060033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x20 PUSH1 0x1F CALLDATASIZE SWAP1 DUP2 ADD DUP3 SWAP1 DIV SWAP1 SWAP2 MUL DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP2 DUP2 SWAP1 DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP DUP5 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP PUSH1 0x20 DUP5 ADD SWAP1 POP CALLVALUE CREATE2 PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 POP DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG0 POP POP STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x57F4B6F392E3BA295B33E363360D55F06EAD85EC96 AND GAS BLOCKHASH PUSH15 0x7B0231AB668464736F6C6343000706 STOP CALLER ",
              "sourceMap": "166:28:0:-:0;;;186:8;166:28;;;;;;;;;;;25:286;166:28;25:286;166:28;;;144:12;;;;;;186:8;;144:12;186:8;;144:12;166:28;;;;;;;;-1:-1:-1;259:11:0;;166:28;;-1:-1:-1;166:28:0;259:11;-1:-1:-1;;254:2:0;244:13;;;-1:-1:-1;231:11:0;223:51;290:12;;;;;;;;;;215:59;;-1:-1:-1;290:12:0;;;;;;;106:203;;25:286"
            },
            "methodIdentifiers": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/NanoUniversalDeployer.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/NanoUniversalDeployer.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/NanoUniversalDeployer.sol": {
        "ast": {
          "absolutePath": "contracts/NanoUniversalDeployer.sol",
          "exportedSymbols": {
            "NanoUniversalDeployer": [
              23
            ]
          },
          "id": 24,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 23,
              "linearizedBaseContracts": [
                23
              ],
              "name": "NanoUniversalDeployer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": true,
                  "id": 5,
                  "name": "Deploy",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 5,
                        "src": "75:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "75:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "74:15:0"
                  },
                  "src": "62:38:0"
                },
                {
                  "body": {
                    "id": 21,
                    "nodeType": "Block",
                    "src": "134:175:0",
                    "statements": [
                      {
                        "assignments": [
                          9
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9,
                            "mutability": "mutable",
                            "name": "addr",
                            "nodeType": "VariableDeclaration",
                            "scope": 21,
                            "src": "144:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "144:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "144:12:0"
                      },
                      {
                        "assignments": [
                          12
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12,
                            "mutability": "mutable",
                            "name": "code",
                            "nodeType": "VariableDeclaration",
                            "scope": 21,
                            "src": "166:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 11,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "166:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 15,
                        "initialValue": {
                          "expression": {
                            "id": 13,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "186:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "186:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "166:28:0"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "213:63:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "215:59:0",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "callvalue",
                                      "nodeType": "YulIdentifier",
                                      "src": "231:9:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "231:11:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "code",
                                        "nodeType": "YulIdentifier",
                                        "src": "248:4:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:2:0",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "244:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "244:13:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "code",
                                        "nodeType": "YulIdentifier",
                                        "src": "265:4:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "259:5:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "259:11:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "272:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:7:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:51:0"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "215:4:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "215:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 12,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "248:4:0",
                            "valueSize": 1
                          },
                          {
                            "declaration": 12,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "265:4:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 16,
                        "nodeType": "InlineAssembly",
                        "src": "204:72:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 18,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "297:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "Deploy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "290:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "290:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20,
                        "nodeType": "EmitStatement",
                        "src": "285:17:0"
                      }
                    ]
                  },
                  "id": 22,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "114:2:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "134:0:0"
                  },
                  "scope": 23,
                  "src": "106:203:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 24,
              "src": "25:286:0"
            }
          ],
          "src": "0:311:0"
        },
        "id": 0
      }
    }
  }
}
