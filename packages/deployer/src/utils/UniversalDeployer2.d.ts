/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface UniversalDeployer2Interface extends Interface {
  functions: {
    deploy: TypedFunctionDescription<{
      encode([_creationCode, _instance]: [Arrayish, BigNumberish]): string;
    }>;
  };

  events: {};
}

export class UniversalDeployer2 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): UniversalDeployer2;
  attach(addressOrName: string): UniversalDeployer2;
  deployed(): Promise<UniversalDeployer2>;

  on(event: EventFilter | string, listener: Listener): UniversalDeployer2;
  once(event: EventFilter | string, listener: Listener): UniversalDeployer2;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): UniversalDeployer2;
  removeAllListeners(eventName: EventFilter | string): UniversalDeployer2;
  removeListener(eventName: any, listener: Listener): UniversalDeployer2;

  interface: UniversalDeployer2Interface;

  functions: {
    deploy(
      _creationCode: Arrayish,
      _instance: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  deploy(
    _creationCode: Arrayish,
    _instance: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    deploy(
      _creationCode: Arrayish,
      _instance: BigNumberish
    ): Promise<BigNumber>;
  };
}
