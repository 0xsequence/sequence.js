/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  PayableOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface UniversalDeployer2Interface extends ethers.utils.Interface {
  functions: {
    "deploy(bytes,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "deploy",
    values: [BytesLike, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "deploy", data: BytesLike): Result;

  events: {
    "Deploy(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Deploy"): EventFragment;
}

export class UniversalDeployer2 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: UniversalDeployer2Interface;

  functions: {
    deploy(
      _creationCode: BytesLike,
      _instance: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;
  };

  deploy(
    _creationCode: BytesLike,
    _instance: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  staticCall: {
    deploy(
      _creationCode: BytesLike,
      _instance: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<void>;
  };

  filters: {
    Deploy(_addr: null): EventFilter;
  };

  estimateGas: {
    deploy(
      _creationCode: BytesLike,
      _instance: BigNumberish
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    deploy(
      _creationCode: BytesLike,
      _instance: BigNumberish
    ): Promise<PopulatedTransaction>;
  };
}
