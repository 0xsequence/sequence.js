/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { NanoUniversalDeployer } from "./NanoUniversalDeployer";

export class NanoUniversalDeployerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<NanoUniversalDeployer> {
    return super.deploy(overrides || {}) as Promise<NanoUniversalDeployer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NanoUniversalDeployer {
    return super.attach(address) as NanoUniversalDeployer;
  }
  connect(signer: Signer): NanoUniversalDeployerFactory {
    return super.connect(signer) as NanoUniversalDeployerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NanoUniversalDeployer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NanoUniversalDeployer;
  }
}

const _abi = [
  {
    anonymous: true,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_addr",
        type: "address"
      }
    ],
    name: "Deploy",
    type: "event"
  },
  {
    stateMutability: "payable",
    type: "fallback"
  }
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060a680601d6000396000f3fe60a06020601f369081018290049091028201604052608081815260009260609284918190838280828437600092018290525084519495509392505060208401905034f56040805173ffffffffffffffffffffffffffffffffffffffff83168152905191935081900360200190a0505000fea26469706673582212200f6918f34c2021d951e72135136a33430e2efcbc06178074ba663870a11bdde464736f6c634300060a0033";
